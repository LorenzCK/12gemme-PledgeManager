@model PledgeManager.Web.ViewModels.PledgeShowViewModel
@using CommonMark
@{
    ViewData["Title"] = "Gestione offerta";
    ViewData["CoverUrl"] = Model.Campaign.CoverUrl;
    Layout = "~/Views/Shared/Main.cshtml";
}

<div class="row">
    <div class="col-12 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3">
        @Html.Raw(CommonMarkConverter.Convert(Model.Campaign.Description))
    </div>
</div>

<div class="row">
    <div class="col-12 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3">
        @if (Model.Error != null) {
            <div class="alert alert-danger" role="alert">
                @Model.Error.Message
            </div>
        }

        <h1>La tua offerta</h1>

        <p>Questo è il “pledge manager” della tua offerta alla campagna di crowdfunding <a href="@Model.Campaign.CampaignLink" target="_blank">@Model.Campaign.Title</a>, terminata il @Model.Campaign.TerminatedOn.ToShortDateString().</p>
        <p class="top-break">Potrai gestire qui sotto i contenuti finali della tua ricompensa: potrai eventualmente passare ad un livello superiore di ricompensa e selezionare gli eventuali <i>articoli aggiuntivi</i>.</p>
        <p>Il pannello tiene conto del tuo contributo registrato tramite il sistema di crowdfunding nel calcolare il costo finale della tua ricompensa. Eventuali eccedenze possono essere pagate tramite PayPal.</p>
        <p>Una volta compilata la ricompensa che desideri, potrai <b>finalizzare l’offerta</b>: dopo questo ultimo passo non sarà possibile modificare la ricompensa scelta.</p>
        <p class="top-break">Per qualsiasi dubbio, puoi <a href="mailto:@(Model.Campaign.SupportEmailAddress)?subject=Pledge @(Model.Pledge.UserId)">rivolgerti a noi via e-mail</a>, facendo riferimento al contributo <code>#@(Model.Pledge.UserId)</code>.</p>
    </div>
</div>

<div class="row">
    <div class="col-12 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3">

        <div class="scroll-container">
            <div class="row totals">
                <table>
                    <thead>
                        <tr>
                            <th scope="col">Totale ricompensa</th>
                            <th></th>
                            <th scope="col">Già pagato</th>
                            <th></th>
                            <th scope="col">Rimanente</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="sum text-primary">
                                @Model.FinalCost.ToString("F1")&nbsp;€
                            </td>
                            <td class="operand">
                                &minus;
                            </td>
                            <td class="sum text-secondary">
                                @Model.Pledge.CurrentPledge.ToString("F1")&nbsp;€
                            </td>
                            <td class="operand">
                                =
                            </td>
                            <td class="sum @((Model.CanBeClosed) ? "text-success" : "text-warning")">
                                @(Model.ToPay.ToString("F1"))&nbsp;€
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <h3 id="shipping">Spedizione</h3>

            @using (Html.BeginForm("UpdateShipping", "Pledge", new { campaignCode = Model.Campaign.Code, userId = Model.Pledge.UserId, token = Model.Pledge.UserToken })) {
                <div class="form-group">
                    <label for="inputShippingName">Nome e cognome</label>
                    <input type="text" class="form-control" name="inputShippingName" id="inputShippingName" placeholder="Mario Rossi" value="@Model.Pledge?.Shipping?.Name" />
                </div>

                <div class="form-group">
                    <label for="inputShippingAddress">Indirizzo</label>
                    <input type="text" class="form-control" name="inputShippingAddress" id="inputShippingAddress" placeholder="Via dei Dodici, 12" value="@Model.Pledge?.Shipping?.Address" />
                    <input type="text" class="form-control" name="inputShippingAddressSecundary" id="inputShippingAddressSecundary" value="@Model.Pledge?.Shipping?.AddressSecondary" />
                </div>

                <div class="form-row">
                    <div class="form-group col-sm-3">
                        <label for="inputShippingZip">CAP</label>
                        <input type="text" class="form-control" name="inputShippingZip" id="inputShippingZip" value="@Model.Pledge?.Shipping?.ZipCode" />
                    </div>
                    <div class="form-group col-sm-6">
                        <label for="inputShippingCity">Città</label>
                        <input type="text" class="form-control" name="inputShippingCity" id="inputShippingCity" value="@Model.Pledge?.Shipping?.City" />
                    </div>
                    <div class="form-group col-sm-3">
                        <label for="inputShippingProvince">Prov.</label>
                        <input type="text" class="form-control" name="inputShippingProvince" id="inputShippingProvince" value="@Model.Pledge?.Shipping?.Province" />
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputShippingCountry">Paese</label>
                    <input type="text" class="form-control" name="inputShippingCountry" id="inputShippingCountry" placeholder="Italia" value="@Model.Pledge?.Shipping?.Country" />
                </div>

                <button type="submit" class="btn btn-primary">Aggiorna indirizzo</button>
            }

            <hr />

            <h3 id="reward">Ricompensa</h3>

            <div class="list-group">
                @foreach (var upgrade in Model.UpgradePaths) {
                    var additionalClass = (upgrade.Reward.Code == Model.CurrentReward.Code) ? "active" : "";

                    <div class="list-group-item list-group-item-action flex-column align-items-start @additionalClass">
                        <form action="@Url.Action("UpdateReward", "Pledge", new { campaignCode = Model.Campaign.Code, userId = Model.Pledge.UserId, token = Model.Pledge.UserToken })" method="post">
                            <input type="hidden" name="rewardCode" value="@upgrade.Reward.Code" />

                            <div class="d-flex w-100 justify-content-between">
                                <h5 class="mb-1">@upgrade.Reward.Title</h5>
                                @if (upgrade.UpgradeCost != 0M) {
                                    <span class="badge badge-warning">
                                        @((upgrade.UpgradeCost > 0) ? "+" : "-")
                                        @Math.Abs(upgrade.UpgradeCost).ToString("F1")
                                        €
                                    </span>
                                }
                            </div>
                            @Html.Raw(CommonMarkConverter.Convert(upgrade.Reward.Description))
                            @if (upgrade.UpgradeCost < 0M) {
                                <button type="submit" class="btn btn-danger btn-sm">Seleziona ricompensa</button>
                            }
                            else if (upgrade.UpgradeCost > 0M) {
                                <button type="submit" class="btn btn-success btn-sm">Seleziona ricompensa</button>
                            }
                            else {
                                <button type="submit" class="btn btn-secondary btn-sm" disabled>Seleziona ricompensa</button>
                            }
                        </form>
                    </div>
                }
            </div>

            <hr />

            <h3 id="addons">Articoli aggiuntivi</h3>

            @if (Model.AddedAddOns.Count() == 0) {
                <p>Nessun articolo aggiuntivo selezionato. 😔</p>
            }
            else {
                <div class="list-group">
                    @foreach (var addon in Model.AddedAddOns) {
                        <div class="list-group-item list-group-item-action flex-column align-items-start">
                            <form action="@Url.Action("RemoveAddOn", "Pledge", new { campaignCode = Model.Campaign.Code, userId = Model.Pledge.UserId, token = Model.Pledge.UserToken })" method="post">
                                <input type="hidden" name="addonCode" value="@addon.AddOn.Code" />
                                <input type="hidden" name="variant" value="@addon.Variant" />

                                <h5 class="mb-1">@addon.AddOn.Title</h5>
                                @Html.Raw(CommonMarkConverter.Convert(addon.AddOn.Description))
                                @if (addon.Variant != null) {
                                    <p><small>Variante: @addon.Variant</small></p>
                                }
                                <button type="submit" class="btn btn-danger btn-sm">Rimuovi</button>
                            </form>
                        </div>
                    }
                </div>
            }

            <h4 id="addAddon">Aggiungi…</h4>

            <div class="list-group">
                @foreach (var addon in Model.AvailableAddOns) {
                    <div class="list-group-item list-group-item-action flex-column align-items-start">
                        <form action="@Url.Action("AddAddOn", "Pledge", new { campaignCode = Model.Campaign.Code, userId = Model.Pledge.UserId, token = Model.Pledge.UserToken })" method="post">
                            <input type="hidden" name="addonCode" value="@addon.Code" />

                            <div class="d-flex w-100 justify-content-between">
                                <h5 class="mb-1">@addon.Title</h5>
                                <span class="badge badge-warning">
                                    + @addon.Cost.ToString("F1") €
                                </span>
                            </div>
                            @Html.Raw(CommonMarkConverter.Convert(addon.Description))
                            @if (addon.Variants != null) {
                                <p>
                                    Varianti:
                                    <select name="variant" class="form-control">
                                        @foreach (var variant in addon.Variants) {
                                            <option value="@variant">@variant</option>
                                        }
                                    </select>
                                </p>
                            }
                            <button type="submit" class="btn btn-success btn-sm">Aggiungi</button>
                        </form>
                    </div>
                }
            </div>

            <hr />

        </div>

        <h3 id="done">Quasi fatto!</h3>

        @if (Model.ConfirmedPayment != null) {
            <div class="alert alert-success" role="alert">
                Pagamento registrato (#@(Model.ConfirmedPayment.PaymentId)) per un corrispettivo di <b>@(Model.ConfirmedPayment.PaymentTotal.ToString("F1"))&nbsp;€</b>.
            </div>
        }

        @if (Model.CanBeClosed) {
            
            <p>Se la ricompensa selezionata sopra ti soddisfa, la tua offerta per la campagna <b>@Model.Campaign.Title</b> può essere chiusa.</p>
            <p>Una volta chiusa, l’<b>offerta non potrà più essere modificata</b>.</p>

            @if (Model.Pledge.CurrentPledge > Model.FinalCost) {
                <p class="text-danger"><b>Attenzione:</b> la tua ricompensa selezionata vale <i>meno</i> di quanto tu abbia offerto. Passa ad una ricompensa superiore oppure aggiungi degli articoli aggiuntivi.</p>
            }

            <hr />

            <form action="@Url.Action("ClosePledge", "Pledge", new { campaignCode = Model.Campaign.Code, userId = Model.Pledge.UserId, token = Model.Pledge.UserToken })" method="post">

                <div class="form-group">
                    <label for="pledgeNotes">Note e commenti</label>
                    <textarea class="form-control" id="pledgeNotes" name="pledgeNotes" rows="4"></textarea>
                </div>

                <div class="form-group form-check">
                    <input class="form-check-input" type="checkbox" value="" id="checkNewsletter" name="checkNewsletter">
                    <label class="form-check-label" for="checkNewsletter">
                        Desidero essere iscritto/a alla Newsletter e ricevere occasionali comunicazioni.
                    </label>
                </div>

                <div class="form-group">
                    <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#modalConfirmation">Finalizza offerta!</button>
                </div>

                <!-- Modal confirmation -->
                <div class="modal fade" id="modalConfirmation" tabindex="-1" role="dialog" aria-labelledby="modalConfirmationCenterTitle" aria-hidden="true">
                  <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="modalConfirmationCenterTitle">Finalizza?</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body">
                        Vuoi finalizzare il tuo contributo alla campagna e confermare la ricompensa selezionata? Non sarà possibile modificare ulteriormente la ricompensa.
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Annulla</button>
                        <button type="submit" class="btn btn-primary">Finalizza</button>
                      </div>
                    </div>
                  </div>
                </div>

            </form>

        }
        else {

            <p>Il corrispettivo finale per la ricompensa selezionata è superiore alla tua offerta. Puoi integrare l’offerta pagando <b>@(Model.ToPay.ToString("F1"))&nbsp;€</b> direttamente tramite <b>PayPal</b> o <b>carta di credito</b> utilizzando i pulsanti qui sotto.</p>

            <form action="@Url.Action("ProcessPayment", "Pledge", new { campaignCode = Model.Campaign.Code, userId = Model.Pledge.UserId, token = Model.Pledge.UserToken })" method="post" id="paymentSubmissionForm">
                <input type="hidden" name="paymentOrderId" id="paymentOrderId" />
            </form>

            <div class="finalize">
                <div id="paypal-button-container"></div>
            </div>

            <script>
paypal.Buttons({
    createOrder: function(data, actions) {
        return actions.order.create({
            purchase_units: [
                {
                    amount: {
                        value: '@(Model.ToPay.ToString("F2"))',
                        currency_code: 'EUR'
                    },
                    description: 'Contributo a campagna @(Model.Campaign.Title)',
                    invoice_id: 'PLDG/@(Model.Pledge.UserId)/@(Model.Pledge.Payments.Count+1)',
                    soft_descriptor: '@(Model.Campaign.Code.ToUpperInvariant())'
                }
            ]
        });
    },
    onApprove: function(data, actions) {
        return actions.order.capture().then(function (details) {
            console.log('Order ' + data.orderID + ' completed by payer ID' + details.payer.payer_id + ' (' + details.payer.name.given_name + ' ' + details.payer.name.surname + ')');

            document.getElementById('paymentOrderId').value = data.orderID;
            document.getElementById('paymentSubmissionForm').submit();
        });
    }
 }).render('#paypal-button-container');
            </script>

        }
    </div>
</div>
